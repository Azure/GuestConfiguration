#################################################################################
#                      OneBranch Pipelines - PR Build                           #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none

parameters: # parameters are shown up in ADO UI in a build queue time
- name: 'debug'
  displayName: 'Enable debug output'
  type: boolean
  default: false

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  system.debug: ${{ parameters.debug }}
  ENABLE_PRS_DELAYSIGN: 0
  ROOT: $(Build.SourcesDirectory)
  REPOROOT: $(Build.SourcesDirectory)
  OUTPUTROOT: $(REPOROOT)/output
  NUGET_XMLDOC_MODE: none
  WindowsContainerImage: 'cdpxwin1809.azurecr.io/global/corext:latest'

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    globalSdl: # https://aka.ms/obpipelines/sdl
      tsa:
        enabled: false # onebranch publish all sdl results to TSA. If TSA is disabled all SDL tools will forced into 'break' build mode.
      credscan:
         suppressionsFile: $(Build.SourcesDirectory)/.config/CredScanSuppressions.json
      binskim:
        break: true # always break the build on binskim issues. You can disable it by setting to 'false'
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      suppression:
        suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppres
    stages:
    - stage: build
      jobs:
      - job: main_setup
        pool:
          type: windows  # read more about custom job pool types at https://aka.ms/obpipelines/yaml/jobs

        variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
          ob_outputDirectory: '$(REPOROOT)\out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts
          ob_sdl_binskim_break: true # https://aka.ms/obpipelines/sdl

        steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'specific'
              project: 'b32aa71e-8ed2-41b2-9d77-5bc261222004'
              pipeline: '254966'
              buildVersionToDownload: 'latest'
              downloadType: 'single'
              artifactName: 'drop_linux_build_multibuild'
              downloadPath: '$(Build.SourcesDirectory)\output'

          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'specific'
              project: 'b32aa71e-8ed2-41b2-9d77-5bc261222004'
              pipeline: '236428'
              buildVersionToDownload: 'latest'
              downloadType: 'single'
              artifactName: 'out'
              downloadPath: '$(Build.SourcesDirectory)\output'

          - task: PowerShell@2
            name: 'Download_powershell'
            inputs:
              targetType: 'inline'
              script: |
                # Download powershell-install script.
                Invoke-RestMethod -uri https://github.com/PowerShell/PowerShell/releases/download/v7.2.1/PowerShell-7.2.1-win-x64.zip -OutFile .\pscore.zip

          - task: PowerShell@2
            name: 'Install_powershell'
            inputs:
              targetType: 'inline'
              script: |
                Write-Output "Expand Archive"
                Expand-Archive .\pscore.zip -DestinationPath .\pscore
                Write-Output "Update environment variables."
                foreach($scope in @('user','process','machine'))
                {
                  $val = [System.Environment]::GetEnvironmentVariable('PATH', $scope)
                  $newpath = "$val;$(Build.SourcesDirectory)\pscore"
                  Write-Output $newpath
                  [System.Environment]::SetEnvironmentVariable('PATH', $newpath, [System.EnvironmentVariableTarget]::Machine)
                }
               
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                Write-Output "Building and package module."
                .\pscore\pwsh.exe -c {.\build.ps1 -ResolveDependency -tasks pack}
                
# https://aka.ms/obpipelines/cloudtest
# uncomment this section and edit parameters to enable CloudTest
    # - stage: cloudtest
    #   dependsOn: build_stage
    #   jobs:
    #   - job: cloudtestjob
    #     pool:
    #       type: cloudtestagentless
    #     continueOnError: true
    #     steps:
    #     - task: CloudTestServerBuildTask@1
    #       displayName: 'CloudTest'
    #       inputs:
    #         connectedServiceName: 'CloudTest-prod'
    #         cloudTestTenant: 'onebranchtest'
    #         testMapLocation: '[BuildRoot]\ClassLibrary.UnitTest\TestMapCdp.xml'
    #         pipelineArtifactName: 'drop_build_main'
    #         pipelineArtifactBuildUrl: '$(System.TaskDefinitionsUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)'
    #         parserProperties: 'worker:VsTestVersion=V150;CodeCoverageType=Dynamic;worker:TestVar=$(RUN_PIPELINE_VARIABLE)'
    #         cacheEnabled: false
    #         scheduleBuildRequesterAlias: 'azbldrun'
