trigger: none

variables:
  triggeringPipelineAlias: PublicPipeline
  buildFolderName: output
  buildArtifactName: output
  testResultFolderName: testResults
  testArtifactName: testResults

resources:
  pipelines:
  - pipeline: PublicPipeline # $(triggeringPipelineAlias)
    source: Azure.GuestConfiguration.Public
    trigger:
      branches:
        - master

pool:
  vmImage: 'ubuntu 16.04'

stages:
  - stage: init_private_build
    jobs:
      - job: retrieve_previous_pipeline_artifact
        displayName: 'Downloading Public Pipeline Output'
        timeoutInMinutes: 0
        steps:
          - download: PublicPipeline # $(triggeringPipelineAlias)
            artifact: $(buildFolderName)

          - pwsh: |
              dotnet tool install --global GitVersion.Tool
              $gitVersionObject = dotnet-gitversion | ConvertFrom-Json
              $gitVersionObject.psobject.properties.Foreach{
                  Write-Host -Object "Setting Task Variable '$($_.Name)' with value '$($_.Value)'."
                  Write-Host -Object "##vso[task.setvariable variable=$($_.Name);]$($_.Value)"
              }
              Write-Host -Object "##vso[build.updatebuildnumber]$($gitVersionObject.FullSemVer)"
            displayName: Calculate ModuleVersion (GitVersion)
            name: gitVersion

          - task: EsrpCodeSigning@1
            displayName: ESRP CodeSigning
            inputs:
              ConnectedServiceName: "GuestConfigModuleSigning"
              FolderPath: '$(Pipeline.Workspace)/PublicPipeline/$(buildFolderName)/'
              Pattern: '*.psm1, *.ps1, *.exe, *.dll'
              signConfigType: inlineSignParams
              CertificateId: CP-450779-Pgp
              inlineOperation: >-
                [
                  {
                    "KeyCode": "CP-230012",
                    "OperationCode": "SigntoolSign",
                    "Parameters": {
                      "OpusName": "Microsoft",
                      "OpusInfo": "http://www.microsoft.com",
                      "FileDigest": "/fd \"SHA256\"",
                      "PageHash": "/NPH",
                      "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                    },
                    "ToolName": "sign",
                    "ToolVersion": "1.0"
                  },
                  {
                    "KeyCode": "CP-230012",
                    "OperationCode": "SigntoolVerify",
                    "Parameters": {},
                    "ToolName": "sign",
                    "ToolVersion": "1.0"
                  }
                ]

          - task: PublishPipelineArtifact@1
            displayName: 'Publish Pipeline Artifact'
            inputs:
              targetPath: '$(Pipeline.Workspace)/PublicPipeline/GuestConfiguration'
              artifact: 'GuestConfiguration'
              publishLocation: 'pipeline'
              parallel: true
    # jobs:
    #   - job: Deploy_Module
    #     displayName: 'Deploy Module'
    #     pool:
    #       vmImage: 'ubuntu-latest'
    #     steps:
    #       - task: DownloadPipelineArtifact@2
    #         displayName: 'Download Pipeline Artifact'
    #         inputs:
    #           buildType: 'current'
    #           artifactName: $(buildArtifactName)
    #           targetPath: '$(Build.SourcesDirectory)/$(buildArtifactName)'
    #       - task: PowerShell@2
    #         name: publishRelease
    #         displayName: 'Publish Release'
    #         inputs:
    #           filePath: './build.ps1'
    #           arguments: '-tasks publish'
    #           pwsh: true
    #         env:
    #           GitHubToken: $(GitHubToken)
    #           GalleryApiToken: $(GalleryApiToken)
    #       - task: PowerShell@2
    #         name: sendChangelogPR
    #         displayName: 'Send Changelog PR'
    #         inputs:
    #           filePath: './build.ps1'
    #           arguments: '-tasks Create_ChangeLog_GitHub_PR'
    #           pwsh: true
    #         env:
    #           GitHubToken: $(GitHubToken)
